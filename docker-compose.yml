version: '3.8'

services:
  # Hlavn√≠ aplikace
  research-app:
    build: .
    container_name: biohacking-research-app
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=sqlite:///data/app.db
    volumes:
      - ./data:/home/app/data
      - ./cache:/home/app/cache
      - ./logs:/home/app/logs
    depends_on:
      - redis
      - prometheus
    networks:
      - research_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "from core.main import UnifiedBiohackingResearchTool; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis pro caching a session storage
  redis:
    image: redis:7-alpine
    container_name: research-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - research_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Prometheus pro monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: research-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - research_network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Grafana pro vizualizaci metrik
  grafana:
    image: grafana/grafana:latest
    container_name: research-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - research_network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Nginx reverse proxy pro load balancing
  nginx:
    image: nginx:alpine
    container_name: research-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - research_network
    restart: unless-stopped
    depends_on:
      - research-app

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  research_network:
    driver: bridge
